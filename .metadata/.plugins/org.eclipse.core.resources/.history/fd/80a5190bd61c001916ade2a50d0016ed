package com.itemsharing.itemservice.serviceimpl;

import java.io.IOException;
import java.util.Date;
import java.util.List;
import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.itemsharing.itemservice.model.Item;
import com.itemsharing.itemservice.model.User;
import com.itemsharing.itemservice.repository.ItemRepository;
import com.itemsharing.itemservice.service.ItemService;
import com.itemsharing.itemservice.service.UserService;

@Service
public class ItemServiceImpl implements ItemService {
	
	public static final Logger logger =  LoggerFactory.getLogger(ItemServiceImpl.class);

	@Autowired
	ItemRepository itemrepository;
	
	@Autowired
	UserService userservice;
	
	@Override
	public Item addItemByUser(Item item, String username) {
		Item itemDetails  = itemrepository.findByName(item.getName());
		if(itemDetails != null) {
			logger.info("Item with this name already exist");
			return null;
		}else {
			Date date = new Date();
			item.setAddDate(date);
			User user = userservice.getUserByName(username);
			item.setUser(user);
			Item newItem = itemrepository.save(item);
			return newItem;
			
		}
	}

	@Override
	public List<Item> getAllItems() {
		return (List<Item>) itemrepository.findAll();
	}

	@Override
	public List<Item> getItemsByUsername(String userName) {
		User user = userservice.getUserByName(userName);
		return (List<Item>)itemrepository.findByUser(user);
	}

	@Override
	public Item getItemById(Long id) {
		return itemrepository.findById(id).get();
	}

	@Override
	public Item updateItem(Item item) throws IOException {
		Optional<Item> newItem = getItemById(item.getId());
		if(newItem == null) {
			logger.info("Item with this id not exist");
		}else {
			newItem.get().s
		}
		return null;
	}

	@Override
	public void deleteItemById(Long id) {
		// TODO Auto-generated method stub
		
	}

}
